use mydb;

create table tb_test01
(
    col1 varchar(10),
    col2 varchar(20),
    col3 varchar(30)
);

create table tb_test02
(
    id     int,
    name   varchar(30),
    height decimal(3, 1),
    birth  date
);

-- table copy 하는 방법-1
create table tb_test03 as
select *
from jobs;
drop table tb_test03;
-- table copy 하는 방법-2 이 방법이 더 안전하다.
create table if not exists tb_test03
select *
from jobs;
drop table tb_test03;
-- table copy 하는 방법-3 필요한 컬럼만 빼서 테이블 생성
create table tb_test03 as
select job_id as jobid, max_salary as maxal
from jobs;
drop table tb_test03;
-- table copy 하는 방법-3 필요한 컬럼만 만듬 , 데이터는 미포함
create table if not exists tb_test04 like jobs;

create table tb_test05
select department_id as dnum, sum(salary) as "sum", avg(salary) as "avg"
from employees
group by department_id;

-- object : create, drop, alter
-- data : insert, delete, select, update

-- 컬럼 이름 변경
alter table tb_test04
    rename
        to tb_test99;

-- 컬럼 추가
alter table tb_test99
    add newcol1 varchar(30);

alter table tb_test99
    add (col2_new decimal(5, 1), col3_new date);

desc tb_test99;

-- 컬럼 데이터형 수정
alter table tb_test99
    modify newcol1 int;

-- 컬럼명 변경(col2_new를 new_col2로)
alter table tb_test99
    change col2_new new_col2 varchar(20);

-- 컬럼 삭제
alter table tb_test99
    drop column newcol1;

-- 테이블 컬럼명만 복사, 데이터 복사 x, where 1=2가 옵션을 의미
create table dept as
select *
from departments
where 1 = 2;
drop table dept;
-- insert
insert into dept(department_id, department_name, manager_id, location_id)
values (10, '기획부', 100, 101);
insert into dept(department_id, department_name, manager_id, location_id)
values (30, '개발부', 100, 101);
insert into dept(department_id, department_name)
values (20, '관리부');
insert into dept
values (101, '머머부', 101, 102);
-- departmnet_name이 not null로 설정되어있어서 데이터 삽입 불가능
# insert into dept(department_id) values (30);

-- 삭제
delete
from dept
where department_name = "머머부";
delete
from dept
where manager_id is null;

-- 수정
update dept
set manager_id = 300
where department_id = 40;
update dept
set manager_id  = 300,
    location_id = 333
where department_name = "개발부";

drop table dept;

/**
  무결성 : constraint
            column을 지정하는 성질, column 설정

  무결성 조건은 3가지가 존재
  primary key : 기본키, null을 허용하지 않는다, 중복을 허용하지 않는다. (id, 주민번호 -> 사용 X 무조건 Long으로 idx 잡아야함)
  unique key : 고유키, null을 허용한다. 중복을 허용하지 않는다. (ex: e-mail)
  foregin key : 외래키. join(테이블과 테이블 연결). null을 허용. 외래키로 지정된 컬럼은 테이블에서 pk나 uk로 설정되어 있어야한다.

  check : 범위를 지정. 지정된 값외에 사용할 수는 없다. null을 허용
  not null : null을 허용하지 않는다. 중복을 허용한다.
 */

create table tb_test06
(
    col1 varchar(10) not null,
    col2 varchar(20)
);

insert into tb_test06(col1, col2)
values ("AAA", "111");
insert into tb_test06(col1)
values ("AAA");
-- col1이 notnull이라 기본값 지정 필수
# insert into tb_test06(col2) values ("222");
drop table if exists tb_test06;

-- primary key = unique + not null
create table tb_test06
(
    pk_col varchar(10) primary key,
    col1   varchar(20),
    col2   varchar(30)
);

insert into tb_test06(pk_col, col1, col2)
values ('AAA', '111', 'aaa');
insert into tb_test06(pk_col)
values ('BBB');
# 위에서 데이터 등록해서 오류발생, mysql은 대소문자 구분 안하기 때문
insert into tb_test06(pk_col)
values ('bbb');
# 기본키값은 null 불가능
insert into tb_test06(col1, col2)
values ('bbb', 'aaa');
# 삽입은 되나 이렇게 사용 X
insert into tb_test06(pk_col, col1, col2)
values (' ', 'bbb', 'aaa');

-- unique : 고유키. 중복된 값은 불가. null 허용
create table tb_test07
(
    uk_col varchar(10) unique,
    col1   varchar(20),
    col2   varchar(30)
);
drop table tb_test07;

create table tb_test07
(
    uk_col varchar(10) unique,
    col1   varchar(20),
    col2   varchar(30),
    unique key(uk_col)
);

insert into tb_test07(uk_col, col1, col2)
values ('AAA', 'aaa', '111');
# unique는 중복 허용 x
# insert into tb_test07(uk_col, col1, col2) values('AAA', 'aaa', '111');
# insert into tb_test07(uk_col, col1, col2) values('aaa', 'aaa', '111');
# null은 허용 가능
insert into tb_test07(uk_col, col1, col2)
values ('', 'aaa', '111');

-- 외래키
-- 기본(부모)테이블(departments)에서 PK, UK로 설정되어 있어야 한다.
-- null을 허용

-- parent table : departments
create table tb_dept(
  department_id varchar(10),
  department_name varchar(20),
  location_id decimal(3),
  primary key(department_id)
);

insert into tb_dept(department_id, department_name, location_id)
values ('10', '기획부', 120);
insert into tb_dept(department_id, department_name, location_id)
values('20', '관리부', 150);
insert into tb_dept(department_id, department_name, location_id)
values('30', '관리부', 150);

-- child table : employees
create table tb_emp(
    empno int,
    ename varchar(30),
    department_id varchar(10),
    foreign key (department_id) references tb_dept(department_id),
    primary key (empno)
);

desc tb_emp;
insert into tb_emp(empno, ename, department_id)
values (100, '홍길동', '10');
insert into tb_emp(empno, ename, department_id)
values (101, '성춘향', '20');
insert into tb_emp(empno, ename, department_id)
values (102, '일지매', '30');
insert into tb_emp(empno, ename)
values (103, '홍두깨');

select empno, ename, e.department_id, d.department_id, d.department_name, location_id
from tb_emp e, tb_dept d
where e.department_id = d.department_id;

-- check
-- 지정된 값만 넣을 수 있다. null을 허용, 중복 가능
create table tb_check(
    col1 varchar(10),
    col2 int,
    constraint chk_01 check(col1 in('사과', '배', '바나나')),
    constraint chk_02 check(col2 > 0 AND col2 <= 10)
);

insert into tb_check(col1, col2) values ('사과', 5);
insert into tb_check(col1, col2) values ('사과', 5);
# 조건 위반이라 삽입 불가
# insert into tb_check(col1, col2) values ('귤', 5);